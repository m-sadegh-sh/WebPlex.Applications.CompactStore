// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
#pragma warning disable 1591, 3008, 3009, 0108
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace WebPlex.Applications.CompactStore.Controllers
{
    public partial class AccountController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AccountController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ValidateCustomerCellPhone()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ValidateCustomerCellPhone);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ValidateCustomerEmail()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ValidateCustomerEmail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Register()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Register);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Login()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Login);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ResetPassword()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ResetPassword);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ResetPasswordCallback()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ResetPasswordCallback);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateProfile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateProfile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ChangePassword()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangePassword);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Logout()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Logout);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AccountController Actions { get { return MVC.Account; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Account";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Account";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string ValidateCustomerCellPhone = "ValidateCustomerCellPhone";
            public readonly string ValidateCustomerEmail = "ValidateCustomerEmail";
            public readonly string Register = "Register";
            public readonly string Login = "Login";
            public readonly string ResetPassword = "ResetPassword";
            public readonly string ResetPasswordCallback = "ResetPasswordCallback";
            public readonly string UpdateProfile = "UpdateProfile";
            public readonly string ChangePassword = "ChangePassword";
            public readonly string Logout = "Logout";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string ValidateCustomerCellPhone = "ValidateCustomerCellPhone";
            public const string ValidateCustomerEmail = "ValidateCustomerEmail";
            public const string Register = "Register";
            public const string Login = "Login";
            public const string ResetPassword = "ResetPassword";
            public const string ResetPasswordCallback = "ResetPasswordCallback";
            public const string UpdateProfile = "UpdateProfile";
            public const string ChangePassword = "ChangePassword";
            public const string Logout = "Logout";
        }


        static readonly ActionParamsClass_ValidateCustomerCellPhone s_params_ValidateCustomerCellPhone = new ActionParamsClass_ValidateCustomerCellPhone();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ValidateCustomerCellPhone ValidateCustomerCellPhoneParams { get { return s_params_ValidateCustomerCellPhone; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ValidateCustomerCellPhone
        {
            public readonly string cellPhone = "cellPhone";
            public readonly string id = "id";
            public readonly string freeness = "freeness";
        }
        static readonly ActionParamsClass_ValidateCustomerEmail s_params_ValidateCustomerEmail = new ActionParamsClass_ValidateCustomerEmail();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ValidateCustomerEmail ValidateCustomerEmailParams { get { return s_params_ValidateCustomerEmail; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ValidateCustomerEmail
        {
            public readonly string email = "email";
            public readonly string id = "id";
            public readonly string freeness = "freeness";
        }
        static readonly ActionParamsClass_Register s_params_Register = new ActionParamsClass_Register();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Register RegisterParams { get { return s_params_Register; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Register
        {
            public readonly string returnUrl = "returnUrl";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_Login s_params_Login = new ActionParamsClass_Login();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Login LoginParams { get { return s_params_Login; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Login
        {
            public readonly string returnUrl = "returnUrl";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_ResetPassword s_params_ResetPassword = new ActionParamsClass_ResetPassword();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ResetPassword ResetPasswordParams { get { return s_params_ResetPassword; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ResetPassword
        {
            public readonly string returnUrl = "returnUrl";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_ResetPasswordCallback s_params_ResetPasswordCallback = new ActionParamsClass_ResetPasswordCallback();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ResetPasswordCallback ResetPasswordCallbackParams { get { return s_params_ResetPasswordCallback; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ResetPasswordCallback
        {
            public readonly string resetPasswordToken = "resetPasswordToken";
            public readonly string returnUrl = "returnUrl";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_UpdateProfile s_params_UpdateProfile = new ActionParamsClass_UpdateProfile();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateProfile UpdateProfileParams { get { return s_params_UpdateProfile; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateProfile
        {
            public readonly string returnUrl = "returnUrl";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_ChangePassword s_params_ChangePassword = new ActionParamsClass_ChangePassword();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChangePassword ChangePasswordParams { get { return s_params_ChangePassword; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChangePassword
        {
            public readonly string returnUrl = "returnUrl";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_Logout s_params_Logout = new ActionParamsClass_Logout();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Logout LogoutParams { get { return s_params_Logout; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Logout
        {
            public readonly string returnUrl = "returnUrl";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _ChangePassword = "_ChangePassword";
                public readonly string _Login = "_Login";
                public readonly string _Register = "_Register";
                public readonly string _ResetPassword = "_ResetPassword";
                public readonly string _ResetPasswordCallback = "_ResetPasswordCallback";
                public readonly string _UpdateProfile = "_UpdateProfile";
                public readonly string ChangePassword = "ChangePassword";
                public readonly string Login = "Login";
                public readonly string Register = "Register";
                public readonly string ResetPassword = "ResetPassword";
                public readonly string ResetPasswordCallback = "ResetPasswordCallback";
                public readonly string UpdateProfile = "UpdateProfile";
            }
            public readonly string _ChangePassword = "~/Views/Account/_ChangePassword.cshtml";
            public readonly string _Login = "~/Views/Account/_Login.cshtml";
            public readonly string _Register = "~/Views/Account/_Register.cshtml";
            public readonly string _ResetPassword = "~/Views/Account/_ResetPassword.cshtml";
            public readonly string _ResetPasswordCallback = "~/Views/Account/_ResetPasswordCallback.cshtml";
            public readonly string _UpdateProfile = "~/Views/Account/_UpdateProfile.cshtml";
            public readonly string ChangePassword = "~/Views/Account/ChangePassword.cshtml";
            public readonly string Login = "~/Views/Account/Login.cshtml";
            public readonly string Register = "~/Views/Account/Register.cshtml";
            public readonly string ResetPassword = "~/Views/Account/ResetPassword.cshtml";
            public readonly string ResetPasswordCallback = "~/Views/Account/ResetPasswordCallback.cshtml";
            public readonly string UpdateProfile = "~/Views/Account/UpdateProfile.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_AccountController : WebPlex.Applications.CompactStore.Controllers.AccountController
    {
        public T4MVC_AccountController() : base(Dummy.Instance) { }

        [NonAction]
        partial void ValidateCustomerCellPhoneOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string cellPhone, int? id, bool freeness);

        [NonAction]
        public override System.Web.Mvc.ActionResult ValidateCustomerCellPhone(string cellPhone, int? id, bool freeness)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ValidateCustomerCellPhone);
		if (cellPhone != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "cellPhone", cellPhone);
		if (id != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
		if (freeness != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "freeness", freeness);
            ValidateCustomerCellPhoneOverride(callInfo, cellPhone, id, freeness);
            return callInfo;
        }

        [NonAction]
        partial void ValidateCustomerEmailOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string email, int? id, bool freeness);

        [NonAction]
        public override System.Web.Mvc.ActionResult ValidateCustomerEmail(string email, int? id, bool freeness)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ValidateCustomerEmail);
		if (email != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "email", email);
		if (id != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
		if (freeness != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "freeness", freeness);
            ValidateCustomerEmailOverride(callInfo, email, id, freeness);
            return callInfo;
        }

        [NonAction]
        partial void RegisterOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string returnUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult Register(string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Register);
		if (returnUrl != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            RegisterOverride(callInfo, returnUrl);
            return callInfo;
        }

        [NonAction]
        partial void RegisterOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, WebPlex.Applications.CompactStore.Models.RegisterModel model, string returnUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult Register(WebPlex.Applications.CompactStore.Models.RegisterModel model, string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Register);
		if (model != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
		if (returnUrl != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            RegisterOverride(callInfo, model, returnUrl);
            return callInfo;
        }

        [NonAction]
        partial void LoginOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string returnUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult Login(string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Login);
		if (returnUrl != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            LoginOverride(callInfo, returnUrl);
            return callInfo;
        }

        [NonAction]
        partial void LoginOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, WebPlex.Applications.CompactStore.Models.LoginModel model, string returnUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult Login(WebPlex.Applications.CompactStore.Models.LoginModel model, string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Login);
		if (model != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
		if (returnUrl != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            LoginOverride(callInfo, model, returnUrl);
            return callInfo;
        }

        [NonAction]
        partial void ResetPasswordOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string returnUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult ResetPassword(string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ResetPassword);
		if (returnUrl != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            ResetPasswordOverride(callInfo, returnUrl);
            return callInfo;
        }

        [NonAction]
        partial void ResetPasswordOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, WebPlex.Applications.CompactStore.Models.ResetPasswordModel model, string returnUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult ResetPassword(WebPlex.Applications.CompactStore.Models.ResetPasswordModel model, string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ResetPassword);
		if (model != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
		if (returnUrl != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            ResetPasswordOverride(callInfo, model, returnUrl);
            return callInfo;
        }

        [NonAction]
        partial void ResetPasswordCallbackOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string resetPasswordToken, string returnUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult ResetPasswordCallback(string resetPasswordToken, string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ResetPasswordCallback);
		if (resetPasswordToken != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "resetPasswordToken", resetPasswordToken);
		if (returnUrl != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            ResetPasswordCallbackOverride(callInfo, resetPasswordToken, returnUrl);
            return callInfo;
        }

        [NonAction]
        partial void ResetPasswordCallbackOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, WebPlex.Applications.CompactStore.Models.ResetPasswordCallbackModel model, string returnUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult ResetPasswordCallback(WebPlex.Applications.CompactStore.Models.ResetPasswordCallbackModel model, string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ResetPasswordCallback);
		if (model != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
		if (returnUrl != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            ResetPasswordCallbackOverride(callInfo, model, returnUrl);
            return callInfo;
        }

        [NonAction]
        partial void UpdateProfileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string returnUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateProfile(string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateProfile);
		if (returnUrl != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            UpdateProfileOverride(callInfo, returnUrl);
            return callInfo;
        }

        [NonAction]
        partial void UpdateProfileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, WebPlex.Applications.CompactStore.Models.CustomerModel model, string returnUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateProfile(WebPlex.Applications.CompactStore.Models.CustomerModel model, string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateProfile);
		if (model != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
		if (returnUrl != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            UpdateProfileOverride(callInfo, model, returnUrl);
            return callInfo;
        }

        [NonAction]
        partial void ChangePasswordOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string returnUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChangePassword(string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangePassword);
		if (returnUrl != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            ChangePasswordOverride(callInfo, returnUrl);
            return callInfo;
        }

        [NonAction]
        partial void ChangePasswordOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, WebPlex.Applications.CompactStore.Models.ChangePasswordModel model, string returnUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChangePassword(WebPlex.Applications.CompactStore.Models.ChangePasswordModel model, string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangePassword);
		if (model != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
		if (returnUrl != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            ChangePasswordOverride(callInfo, model, returnUrl);
            return callInfo;
        }

        [NonAction]
        partial void LogoutOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string returnUrl);

        [NonAction]
        public override System.Web.Mvc.ActionResult Logout(string returnUrl)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Logout);
		if (returnUrl != null)
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "returnUrl", returnUrl);
            LogoutOverride(callInfo, returnUrl);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108
