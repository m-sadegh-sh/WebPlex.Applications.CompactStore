@model RegisterModel

@using (Ajax.BeginForm(MVC.Account.Register(), Ajax.Options(
    onBegin: "webPlexFormOnBegin",
    onSuccess: "webPlexFormOnSuccess",
    onFailure: "webPlexFormOnFailure",
    onComplete: "webPlexFormOnComplete",
    updateTargetId: "WebPlex-RegisterContainer"
))) {
    @Html.AntiForgeryToken()
    @Html.Hidden("ReturnUrl", ReturnUrl)
    <div class="WebPlex-FormContainer WebPlex-Clearfix">
        <h3 class="WebPlex-Title WebPlex-Clearfix">
            @Html.ActionLink(Resources.Views_BackToHome, MVC.Home.Root(), new {
                @class = "WebPlex-BackToHome WebPlex-PullLeft"
            })
            @Resources.Views_Account_Register_FormTitle
        </h3>
        <div class="WebPlex-FormGroup WebPlex-Clearfix">
            <div class="WebPlex-FormFields WebPlex-PullLeft WebPlex-Clearfix">
                <div class="WebPlex-FormRow">
                    @Html.TextBoxFor(model => model.CellPhone, new {
                        @class = Html.GetModelState(model => model.CellPhone, "WebPlex-FormInput WebPlex-Opposite"),
                        data_auto_focus = true,
                        placeholder = Html.DisplayNameFor(model => model.CellPhone)
                    })
                    @Html.ValidationMessageFor(model => model.CellPhone)
                </div>
                <div class="WebPlex-FormRow">
                    @Html.PasswordFor(model => model.Password, new {
                        @class = Html.GetModelState(model => model.Password, "WebPlex-FormInput"),
                        placeholder = Html.DisplayNameFor(model => model.Password)
                    })
                    @Html.ValidationMessageFor(model => model.Password)
                </div>
                <div class="WebPlex-FormRow">
                    @Html.PasswordFor(model => model.PasswordConfirmation, new {
                        @class = Html.GetModelState(model => model.PasswordConfirmation, "WebPlex-FormInput"),
                        placeholder = Html.DisplayNameFor(model => model.PasswordConfirmation)
                    })
                    @Html.ValidationMessageFor(model => model.PasswordConfirmation)
                </div>
                <div class="WebPlex-FormRow">
                    @Html.TextBoxFor(model => model.FirstName, new {
                        @class = Html.GetModelState(model => model.FirstName, "WebPlex-FormInput"),
                        placeholder = Html.DisplayNameFor(model => model.FirstName)
                    })
                    @Html.ValidationMessageFor(model => model.FirstName)
                </div>
                <div class="WebPlex-FormRow">
                    @Html.TextBoxFor(model => model.LastName, new {
                        @class = Html.GetModelState(model => model.LastName, "WebPlex-FormInput"),
                        placeholder = Html.DisplayNameFor(model => model.LastName)
                    })
                    @Html.ValidationMessageFor(model => model.LastName)
                </div>
                <div class="WebPlex-FormRow">
                    @Html.TextBoxFor(model => model.Email, new {
                        @class = Html.GetModelState(model => model.Email, "WebPlex-FormInput WebPlex-Opposite"),
                        placeholder = Resources.Members_Customer_Email_Placeholder
                    })
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
                <div class="WebPlex-FormRow">
                    @Html.EditorFor(model => model.Gender)
                    @Html.ValidationMessageFor(model => model.Gender)
                </div>
            </div>
            <p class="WebPlex-Description">
                @Html.Raw(Resources.Views_Account_Register_Description)
            </p>
        </div>
    </div>
    <div class="WebPlex-ButtonStack WebPlex-PullLeft WebPlex-Clearfix">
        <button class="WebPlex-Button WebPlex-Register">
            <span class="WebPlex-ViewPort"></span>@Resources.Views_Account_Register_Register
        </button>
    </div>
    <div class="WebPlex-ButtonStack WebPlex-Secondary WebPlex-PullRight WebPlex-Clearfix">
        @Html.ActionLink(Resources.Views_Account_Register_Login, MVC.Account.Login(ReturnUrl), new {
            @class = "WebPlex-Button"
        })
    </div>
}