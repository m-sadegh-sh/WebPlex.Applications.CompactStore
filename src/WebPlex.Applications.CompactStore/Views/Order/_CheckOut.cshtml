@model CheckOutViewModel

@using (Ajax.BeginForm(MVC.Order.CheckOut(), Ajax.Options(
    onBegin: "webPlexFormOnBegin",
    onSuccess: "webPlexFormOnSuccess",
    onFailure: "webPlexFormOnFailure",
    onComplete: "webPlexFormOnComplete",
    updateTargetId: "WebPlex-CheckOutContainer"
                                                 ))) {
    @Html.AntiForgeryToken()
    @Html.Hidden("ReturnUrl", ReturnUrl)
    <div class="WebPlex-FormContainer WebPlex-Clearfix">
        <h3 class="WebPlex-Title">
            @Resources.Views_Order_CheckOut_FormTitle
        </h3>
        <div class="WebPlex-FormGroup WebPlex-Clearfix">
            <div class="WebPlex-FormFields WebPlex-PullLeft WebPlex-Clearfix">
                @Html.DisplayFor(model => model.Order, "OrderModel.Summary")
            </div>
            <p class="WebPlex-Description">
                @Html.Raw(Resources.Views_Order_CheckOut_Order_Description)
            </p>
        </div>
        <div class="WebPlex-FormGroup WebPlex-Clearfix">
            <div class="WebPlex-FormFields WebPlex-PullLeft WebPlex-Clearfix">
                <div class="WebPlex-FormRow">
                    @Html.EditorFor(model => model.CheckOutType)
                    @Html.ValidationMessageFor(model => model.CheckOutType)
                </div>
            </div>
            <p class="WebPlex-Description">
                @Html.Raw(Resources.Views_Order_CheckOut_Payment_Description)
            </p>
        </div>
    </div>
    <div class="WebPlex-ButtonStack WebPlex-PullLeft WebPlex-Clearfix">
        <button class="WebPlex-Button WebPlex-CheckOut">
            <span class="WebPlex-ViewPort"></span>@Resources.Views_Order_CheckOut_Continue
        </button>
    </div>
    <div class="WebPlex-ButtonStack WebPlex-Secondary WebPlex-PullRight WebPlex-Clearfix">
        @Html.ActionLink(Resources.Views_BackToOrders, MVC.Order.List(), new {
            @class = "WebPlex-Button"
        })
    </div>
}